{"ast":null,"code":"import toast from 'react-hot-toast';\n\n//validate loginpage username\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error('Username Required...!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n// reset password validation\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.confirm_pwd = toast.error(\"Password does not match...!\");\n  }\n  return errors;\n}\n// validate registeration \nexport async function registerationValidateForm(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n}\n\n// validate Password\nfunction passwordVerify(errors = {}, values) {\n  // \"/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]\"\n  const specialCharacters = \"!#$%^&*()_+-=[]{}|;:'\\\",.<>?\";\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be more than 4 characters...!\");\n  } else if (!RegExp(`[${specialCharacters}]`).test(values.password)) {\n    errors.password = toast.error(\"Password must contain special characters...!\");\n  }\n  return errors;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","error","username","includes","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","registerationValidateForm","specialCharacters","length","RegExp","test"],"sources":["/Users/waleedansari/Documents/Web Development/login-app/Login-App/client/src/helper/validate.js"],"sourcesContent":["\nimport toast from 'react-hot-toast';\n\n//validate loginpage username\nexport async function usernameValidate(values){\n    const errors = usernameVerify({}, values);\n    return errors;\n}\n\nfunction usernameVerify(error={}, values){\n    if(!values.username){\n        error.username = toast.error('Username Required...!');\n    }   else if(values.username.includes(\" \")){\n        error.username = toast.error(\"Invalid Username...!\");\n    }\n    return error;\n}\nexport async function passwordValidate(values) {\n    const errors = passwordVerify({}, values);\n    return errors;\n}   \n// reset password validation\nexport async function  resetPasswordValidation(values){\n    const errors = passwordVerify({}, values);\n    if(values.password !== values.confirm_pwd){\n        errors.confirm_pwd = toast.error(\"Password does not match...!\");\n    }\n    return errors;\n}\n// validate registeration \nexport async function registerationValidateForm(values){\n    const errors = usernameVerify({}, values);\n    passwordVerify(errors, values);\n}\n\n\n// validate Password\nfunction passwordVerify(errors = {}, values) {\n    // \"/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]\"\n    const specialCharacters =  \"!#$%^&*()_+-=[]{}|;:'\\\",.<>?\";\n    if (!values.password) {\n        errors.password = toast.error(\"Password Required...!\");\n    } else if (values.password.includes(\" \")) {\n        errors.password = toast.error(\"Wrong Password...!\");\n    } else if (values.password.length < 4) {\n        errors.password = toast.error(\"Password must be more than 4 characters...!\");\n    } else if (!RegExp(`[${specialCharacters}]`).test(values.password)) {\n        errors.password = toast.error(\"Password must contain special characters...!\");\n    }\n    return errors;\n}\n\n\n\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,iBAAiB;;AAEnC;AACA,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EACzC,OAAOC,MAAM;AACjB;AAEA,SAASC,cAAcA,CAACC,KAAK,GAAC,CAAC,CAAC,EAAEH,MAAM,EAAC;EACrC,IAAG,CAACA,MAAM,CAACI,QAAQ,EAAC;IAChBD,KAAK,CAACC,QAAQ,GAAGN,KAAK,CAACK,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAQ,IAAGH,MAAM,CAACI,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAC;IACtCF,KAAK,CAACC,QAAQ,GAAGN,KAAK,CAACK,KAAK,CAAC,sBAAsB,CAAC;EACxD;EACA,OAAOA,KAAK;AAChB;AACA,OAAO,eAAeG,gBAAgBA,CAACN,MAAM,EAAE;EAC3C,MAAMC,MAAM,GAAGM,cAAc,CAAC,CAAC,CAAC,EAAEP,MAAM,CAAC;EACzC,OAAOC,MAAM;AACjB;AACA;AACA,OAAO,eAAgBO,uBAAuBA,CAACR,MAAM,EAAC;EAClD,MAAMC,MAAM,GAAGM,cAAc,CAAC,CAAC,CAAC,EAAEP,MAAM,CAAC;EACzC,IAAGA,MAAM,CAACS,QAAQ,KAAKT,MAAM,CAACU,WAAW,EAAC;IACtCT,MAAM,CAACS,WAAW,GAAGZ,KAAK,CAACK,KAAK,CAAC,6BAA6B,CAAC;EACnE;EACA,OAAOF,MAAM;AACjB;AACA;AACA,OAAO,eAAeU,yBAAyBA,CAACX,MAAM,EAAC;EACnD,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EACzCO,cAAc,CAACN,MAAM,EAAED,MAAM,CAAC;AAClC;;AAGA;AACA,SAASO,cAAcA,CAACN,MAAM,GAAG,CAAC,CAAC,EAAED,MAAM,EAAE;EACzC;EACA,MAAMY,iBAAiB,GAAI,8BAA8B;EACzD,IAAI,CAACZ,MAAM,CAACS,QAAQ,EAAE;IAClBR,MAAM,CAACQ,QAAQ,GAAGX,KAAK,CAACK,KAAK,CAAC,uBAAuB,CAAC;EAC1D,CAAC,MAAM,IAAIH,MAAM,CAACS,QAAQ,CAACJ,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtCJ,MAAM,CAACQ,QAAQ,GAAGX,KAAK,CAACK,KAAK,CAAC,oBAAoB,CAAC;EACvD,CAAC,MAAM,IAAIH,MAAM,CAACS,QAAQ,CAACI,MAAM,GAAG,CAAC,EAAE;IACnCZ,MAAM,CAACQ,QAAQ,GAAGX,KAAK,CAACK,KAAK,CAAC,6CAA6C,CAAC;EAChF,CAAC,MAAM,IAAI,CAACW,MAAM,CAAE,IAAGF,iBAAkB,GAAE,CAAC,CAACG,IAAI,CAACf,MAAM,CAACS,QAAQ,CAAC,EAAE;IAChER,MAAM,CAACQ,QAAQ,GAAGX,KAAK,CAACK,KAAK,CAAC,8CAA8C,CAAC;EACjF;EACA,OAAOF,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}