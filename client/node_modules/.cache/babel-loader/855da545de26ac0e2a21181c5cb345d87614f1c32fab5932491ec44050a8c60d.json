{"ast":null,"code":"import toast from 'react-hot-toast';\n\n//validate loginpage username\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error('Username Required...!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n// reset password validation\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.confirm_pwd = toast.error(\"Password does not match...!\");\n  }\n  return errors;\n}\n// validate registeration \nexport async function registerationValidateForm(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n  emailVerify(errors, values);\n  return errors;\n}\nfunction emailVerify(error = {}, values) {\n  if (!values.email) {\n    error.email = toast.error(\"Email Required...!\");\n  } else if (values.email.includes(\" \")) {\n    error.email = toast.error(\"Invalid Email...!\");\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    error.email = toast.error(\"Invalid email address...!\");\n  }\n  return error;\n}\n// validate profile\nexport async function profileValidation(values) {\n  const errors = emailVerify({}, values);\n}\n// validate Password\nfunction passwordVerify(errors = {}, values) {\n  /* eslint-disable no-useless-escape */\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be more than 4 characters long\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special character\");\n  }\n  return errors;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","error","username","includes","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","registerationValidateForm","emailVerify","email","test","profileValidation","specialChars","length"],"sources":["/Users/waleedansari/Documents/Web Development/login-app/Login-App/client/src/helper/validate.js"],"sourcesContent":["\nimport toast from 'react-hot-toast';\n\n//validate loginpage username\nexport async function usernameValidate(values){\n    const errors = usernameVerify({}, values);\n    return errors;\n}\n\nfunction usernameVerify(error={}, values){\n    if(!values.username){\n        error.username = toast.error('Username Required...!');\n    }   else if(values.username.includes(\" \")){\n        error.username = toast.error(\"Invalid Username...!\");\n    }\n    return error;\n}\nexport async function passwordValidate(values) {\n    const errors = passwordVerify({}, values);\n    return errors;\n}   \n// reset password validation\nexport async function  resetPasswordValidation(values){\n    const errors = passwordVerify({}, values);\n    if(values.password !== values.confirm_pwd){\n        errors.confirm_pwd = toast.error(\"Password does not match...!\");\n    }\n    return errors;\n}\n// validate registeration \nexport async function registerationValidateForm(values){\n    const errors = usernameVerify({}, values);\n    passwordVerify(errors, values);\n    emailVerify(errors, values);\n    return errors;\n}\nfunction emailVerify(error = {}, values){\n    if(!values.email){\n        error.email = toast.error(\"Email Required...!\");\n    }   else if(values.email.includes(\" \")){\n        error.email = toast.error(\"Invalid Email...!\");\n    }   else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\n        error.email = toast.error(\"Invalid email address...!\")\n    }\n    return error;\n}\n// validate profile\nexport async function profileValidation(values){\n    const errors = emailVerify({}, values);\n}\n// validate Password\nfunction passwordVerify(errors = {}, values){\n    /* eslint-disable no-useless-escape */\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    if(!values.password){\n        errors.password = toast.error(\"Password Required...!\");\n    } else if(values.password.includes(\" \")){\n        errors.password = toast.error(\"Wrong Password...!\");\n    }else if(values.password.length < 4){\n        errors.password = toast.error(\"Password must be more than 4 characters long\");\n    }else if(!specialChars.test(values.password)){\n        errors.password = toast.error(\"Password must have special character\");\n    }\n\n    return errors;\n}\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}