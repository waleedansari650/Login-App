{"ast":null,"code":"import toast from 'react-hot-toast';\nimport { isRouteErrorResponse } from 'react-router-dom';\n\n//validate loginpage username\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n// validate username\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error('Username Required...!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n// validate Password\nfunction passwordVerify(errors = {}, values) {\n  const specialCharacters = \"!@#$%^&*()_+-=[]{}|;:'\\\",.<>?/\";\n  if (!values.password) {\n    isRouteErrorResponse.message = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be more than 4 characters...!\");\n  } else if (!specialCharacters.test(values.password)) {\n    errors.password = toast.error(\"Password must contain special characters...!\");\n  }\n  return errors;\n}","map":{"version":3,"names":["toast","isRouteErrorResponse","usernameValidate","values","errors","usernameVerify","error","username","includes","passwordValidate","passwordVerify","specialCharacters","password","message","length","test"],"sources":["/Users/waleedansari/Documents/Web Development/login-app/Login-App/client/src/helper/validate.js"],"sourcesContent":["\nimport toast from 'react-hot-toast';\nimport { isRouteErrorResponse } from 'react-router-dom';\n\n//validate loginpage username\nexport async function usernameValidate(values){\n    const errors = usernameVerify({}, values);\n    return errors;\n}\n// validate username\nfunction usernameVerify(error={}, values){\n    if(!values.username){\n        error.username = toast.error('Username Required...!');\n    }   else if(values.username.includes(\" \")){\n        error.username = toast.error(\"Invalid Username...!\");\n    }\n    return error;\n}\nexport async function passwordValidate(values){\n    const errors = passwordVerify({}, values);\n    return errors;\n}\n// validate Password\nfunction passwordVerify(errors={}, values){\n    const specialCharacters = \"!@#$%^&*()_+-=[]{}|;:'\\\",.<>?/\";\n    if(!values.password){\n        isRouteErrorResponse.message = toast.error(\"Password Required...!\");\n\n    }   else if(values.password.includes(\" \")){\n        errors.password = toast.error(\"Wrong Password...!\");\n    }   else if(values.password.length < 4){\n        errors.password = toast.error(\"Password must be more than 4 characters...!\");\n    } else if(!specialCharacters.test(values.password)){\n        errors.password = toast.error(\"Password must contain special characters...!\");\n    }\n    return errors;\n}\n\n\n\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,SAASC,oBAAoB,QAAQ,kBAAkB;;AAEvD;AACA,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EACzC,OAAOC,MAAM;AACjB;AACA;AACA,SAASC,cAAcA,CAACC,KAAK,GAAC,CAAC,CAAC,EAAEH,MAAM,EAAC;EACrC,IAAG,CAACA,MAAM,CAACI,QAAQ,EAAC;IAChBD,KAAK,CAACC,QAAQ,GAAGP,KAAK,CAACM,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAQ,IAAGH,MAAM,CAACI,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAC;IACtCF,KAAK,CAACC,QAAQ,GAAGP,KAAK,CAACM,KAAK,CAAC,sBAAsB,CAAC;EACxD;EACA,OAAOA,KAAK;AAChB;AACA,OAAO,eAAeG,gBAAgBA,CAACN,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAGM,cAAc,CAAC,CAAC,CAAC,EAAEP,MAAM,CAAC;EACzC,OAAOC,MAAM;AACjB;AACA;AACA,SAASM,cAAcA,CAACN,MAAM,GAAC,CAAC,CAAC,EAAED,MAAM,EAAC;EACtC,MAAMQ,iBAAiB,GAAG,gCAAgC;EAC1D,IAAG,CAACR,MAAM,CAACS,QAAQ,EAAC;IAChBX,oBAAoB,CAACY,OAAO,GAAGb,KAAK,CAACM,KAAK,CAAC,uBAAuB,CAAC;EAEvE,CAAC,MAAQ,IAAGH,MAAM,CAACS,QAAQ,CAACJ,QAAQ,CAAC,GAAG,CAAC,EAAC;IACtCJ,MAAM,CAACQ,QAAQ,GAAGZ,KAAK,CAACM,KAAK,CAAC,oBAAoB,CAAC;EACvD,CAAC,MAAQ,IAAGH,MAAM,CAACS,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAC;IACnCV,MAAM,CAACQ,QAAQ,GAAGZ,KAAK,CAACM,KAAK,CAAC,6CAA6C,CAAC;EAChF,CAAC,MAAM,IAAG,CAACK,iBAAiB,CAACI,IAAI,CAACZ,MAAM,CAACS,QAAQ,CAAC,EAAC;IAC/CR,MAAM,CAACQ,QAAQ,GAAGZ,KAAK,CAACM,KAAK,CAAC,8CAA8C,CAAC;EACjF;EACA,OAAOF,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}